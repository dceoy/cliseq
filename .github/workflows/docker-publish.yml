---
name: Docker

on:
# push:
#   # Publish the default branch as Docker `latest` image.
#   branches:
#     - master

#   # Publish `v1.2.3` tags as releases.
#   tags:
#     - v*

# # Run tests for any PRs.
# pull_request:
  workflow_dispatch:

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ github.repository }}:latest

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=${{ github.repository }}
          echo IMAGE_ID=$IMAGE_ID
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          if [[ "$VERSION" == 'master' ]]; then
            VERSION=latest
          else
            docker tag $IMAGE_ID:latest $IMAGE_ID:$VERSION
          fi
          echo VERSION=$VERSION
          docker push $IMAGE_ID:$VERSION
